// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  firstName    String
  lastName     String
  email        String    @unique
  passwordHash String
  projects     Project[]
}

model Project {
  id               String                @id @default(uuid())
  ownerId          String
  owner            User                  @relation(fields: [ownerId], references: [id])
  name             String
  logo             String?
  accessToken      String                @unique
  issuerIdentifier String
  actionSchemas    ProjectActionSchema[]
  users            ProjectUser[]
  rewards          ProjectReward[]
}

model ProjectActionSchema {
  id             String          @id @default(uuid())
  projectId      String
  project        Project         @relation(fields: [projectId], references: [id])
  name           String
  schemaTypeName String?
  schemaUrl      String?
  key            String
  description    String          @default("")
  data           Json?
  actions        ProjectAction[]
  rewards        ProjectReward[]

  @@unique([projectId, key])
}

model ProjectUser {
  id        String          @id @default(uuid())
  projectId String
  project   Project         @relation(fields: [projectId], references: [id])
  userId    String
  did       String
  actions   ProjectAction[]

  @@unique([projectId, userId])
}

model ProjectAction {
  id                    String              @id @default(uuid())
  projectUserId         String
  user                  ProjectUser         @relation(fields: [projectUserId], references: [id])
  projectActionSchemaId String
  schema                ProjectActionSchema @relation(fields: [projectActionSchemaId], references: [id])
  claimId               String
  qrcode                String
}

model ProjectReward {
  id                    String              @id @default(uuid())
  projectId             String
  project               Project             @relation(fields: [projectId], references: [id])
  type                  RewardType
  conditionField        String
  conditionOperator     String
  conditionValue        String
  projectActionSchemaId String
  schema                ProjectActionSchema @relation(fields: [projectActionSchemaId], references: [id])
}

enum RewardType {
  GIFT_CARD
  CUSTOM_HTTP
}
